{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"CLI/","text":"CLI Update baseline client option In order to reduce manual work a cli option is available to copy over the comparison images into the baseline folder when there is a test failure. Update all baseline images for failing tests Notice that you should run this command after the test suite runs. The below command will only update baseline images that have a diff image, which basically means a test failure. $ cypress-image-diff -u It's important that you ensure the comparison image is the correct representation of the page under test as it will be copied over to the baseline. Update a list of baseline images This functionality is yet to be developed.","title":"CLI"},{"location":"CLI/#cli","text":"","title":"CLI"},{"location":"CLI/#update-baseline-client-option","text":"In order to reduce manual work a cli option is available to copy over the comparison images into the baseline folder when there is a test failure.","title":"Update baseline client option"},{"location":"CLI/#update-all-baseline-images-for-failing-tests","text":"Notice that you should run this command after the test suite runs. The below command will only update baseline images that have a diff image, which basically means a test failure. $ cypress-image-diff -u It's important that you ensure the comparison image is the correct representation of the page under test as it will be copied over to the baseline.","title":"Update all baseline images for failing tests"},{"location":"CLI/#update-a-list-of-baseline-images","text":"This functionality is yet to be developed.","title":"Update a list of baseline images"},{"location":"CONTRIBUTING/","text":"Contributing When contributing to this repository, please first discuss the change you wish to make via issue, email, or any other method with the owners of this repository before making a change. Please note we have a code of conduct, please follow it in all your interactions with the project. Commits When committing please always use the following pattern for you messages (scope, body and footer are optional): <type>(<scope>): <subject> <BLANK LINE> <body> <BLANK LINE> <footer> Commit message types (tags) Release type Example feat : A new feature Minor release (0. 1 .0) feat: Add \"Investment project\" activity card fix : A bug fix Patch release (0.0. 1 ) fix: Remove default activity card docs : Documentation only changes None docs(README): Add testing instructions style : Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc) None style: Use tabs instead of spaces refactor : A code change that neither fixes a bug nor adds a feature None refactor: Add missing props validation to ActivityFeed perf : A code change that improves performance None perf: Improve rendering speed of ActivityFeed test : Adding missing or correcting existing tests None test: Add integration tests to ActivityFeedCard build Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm) None build: Update webpack config ci Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs) None ci: Update CircleCI config chore : Changes to the build process or auxiliary tools and libraries such as documentation generation None chore: Update CircleCI config To create a major/breaking ( 1 .0.0) release, please add BREAKING CHANGE to the commit message body with some explanation, example message: fix: Update flaky screenshot function. BREAKING CHANGE: Update third party driver object. Optionally add more info in the second line of your message. Pull Request Process Ensure any install or build dependencies are removed before the end of the layer when doing a build. Update the README.md with details of changes to the interface, this includes new environment variables, exposed ports, useful file locations and container parameters. You may merge the Pull Request in once you have the sign-off of the mantainer, or if you do not have permission to do that, you may request the reviewer to merge it for you. Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [INSERT EMAIL ADDRESS]. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at http://contributor-covenant.org/version/1/4","title":"Contributing"},{"location":"CONTRIBUTING/#contributing","text":"When contributing to this repository, please first discuss the change you wish to make via issue, email, or any other method with the owners of this repository before making a change. Please note we have a code of conduct, please follow it in all your interactions with the project.","title":"Contributing"},{"location":"CONTRIBUTING/#commits","text":"When committing please always use the following pattern for you messages (scope, body and footer are optional): <type>(<scope>): <subject> <BLANK LINE> <body> <BLANK LINE> <footer> Commit message types (tags) Release type Example feat : A new feature Minor release (0. 1 .0) feat: Add \"Investment project\" activity card fix : A bug fix Patch release (0.0. 1 ) fix: Remove default activity card docs : Documentation only changes None docs(README): Add testing instructions style : Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc) None style: Use tabs instead of spaces refactor : A code change that neither fixes a bug nor adds a feature None refactor: Add missing props validation to ActivityFeed perf : A code change that improves performance None perf: Improve rendering speed of ActivityFeed test : Adding missing or correcting existing tests None test: Add integration tests to ActivityFeedCard build Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm) None build: Update webpack config ci Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs) None ci: Update CircleCI config chore : Changes to the build process or auxiliary tools and libraries such as documentation generation None chore: Update CircleCI config To create a major/breaking ( 1 .0.0) release, please add BREAKING CHANGE to the commit message body with some explanation, example message: fix: Update flaky screenshot function. BREAKING CHANGE: Update third party driver object. Optionally add more info in the second line of your message.","title":"Commits"},{"location":"CONTRIBUTING/#pull-request-process","text":"Ensure any install or build dependencies are removed before the end of the layer when doing a build. Update the README.md with details of changes to the interface, this includes new environment variables, exposed ports, useful file locations and container parameters. You may merge the Pull Request in once you have the sign-off of the mantainer, or if you do not have permission to do that, you may request the reviewer to merge it for you.","title":"Pull Request Process"},{"location":"CONTRIBUTING/#code-of-conduct","text":"","title":"Code of Conduct"},{"location":"CONTRIBUTING/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"CONTRIBUTING/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"CONTRIBUTING/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"CONTRIBUTING/#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"CONTRIBUTING/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [INSERT EMAIL ADDRESS]. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"CONTRIBUTING/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at http://contributor-covenant.org/version/1/4","title":"Attribution"},{"location":"Cypress%20integration/","text":"Integration with Cypress Follow the steps below to have access to the comparison command so you can build visual regression tests Setup Install Cypress: npm i -D cypress Install the package: npm i -D cypress-image-diff-js Then initialise Cypress if you don't have a project: npx cypress open Cypress plugin Import and initialise the Cypress image diff plugin: // Cypress v10+ // cypress.config.js const getCompareSnapshotsPlugin = require('cypress-image-diff-js/dist/plugin'); export default defineConfig({ e2e: { setupNodeEvents(on, config) { return getCompareSnapshotsPlugin(on, config); }, }, }); // Cypress v10+ with TypeScript // cypress.config.ts import getCompareSnapshotsPlugin from 'cypress-image-diff-js/dist/plugin'; export default defineConfig({ e2e: { setupNodeEvents(on, config) { return getCompareSnapshotsPlugin(on, config); }, }, }); // Cypress < v10 // cypress/plugin/index.js module.exports = (on, config) => { const getCompareSnapshotsPlugin = require('cypress-image-diff-js/dist/plugin') return getCompareSnapshotsPlugin(on, config) }; Cypress support Import and add Cypress image command: // Cypress v10+ // cypress/support/{scheme}.js, where {scheme} defaults to e2e const compareSnapshotCommand = require('cypress-image-diff-js/dist/command'); compareSnapshotCommand(); // or Cypress v10+ with TypeScript // cypress/support/{scheme}.ts, where {scheme} defaults to e2e import compareSnapshotCommand from 'cypress-image-diff-js/dist/command'; compareSnapshotCommand(); // Cypress < v10 // cypress/support/index.js require('./commands'); // cypress/support/commands.js const compareSnapshotCommand = require('cypress-image-diff-js/dist/command'); compareSnapshotCommand();","title":"Integration with Cypress"},{"location":"Cypress%20integration/#integration-with-cypress","text":"Follow the steps below to have access to the comparison command so you can build visual regression tests","title":"Integration with Cypress"},{"location":"Cypress%20integration/#setup","text":"Install Cypress: npm i -D cypress Install the package: npm i -D cypress-image-diff-js Then initialise Cypress if you don't have a project: npx cypress open","title":"Setup"},{"location":"Cypress%20integration/#cypress-plugin","text":"Import and initialise the Cypress image diff plugin: // Cypress v10+ // cypress.config.js const getCompareSnapshotsPlugin = require('cypress-image-diff-js/dist/plugin'); export default defineConfig({ e2e: { setupNodeEvents(on, config) { return getCompareSnapshotsPlugin(on, config); }, }, }); // Cypress v10+ with TypeScript // cypress.config.ts import getCompareSnapshotsPlugin from 'cypress-image-diff-js/dist/plugin'; export default defineConfig({ e2e: { setupNodeEvents(on, config) { return getCompareSnapshotsPlugin(on, config); }, }, }); // Cypress < v10 // cypress/plugin/index.js module.exports = (on, config) => { const getCompareSnapshotsPlugin = require('cypress-image-diff-js/dist/plugin') return getCompareSnapshotsPlugin(on, config) };","title":"Cypress plugin"},{"location":"Cypress%20integration/#cypress-support","text":"Import and add Cypress image command: // Cypress v10+ // cypress/support/{scheme}.js, where {scheme} defaults to e2e const compareSnapshotCommand = require('cypress-image-diff-js/dist/command'); compareSnapshotCommand(); // or Cypress v10+ with TypeScript // cypress/support/{scheme}.ts, where {scheme} defaults to e2e import compareSnapshotCommand from 'cypress-image-diff-js/dist/command'; compareSnapshotCommand(); // Cypress < v10 // cypress/support/index.js require('./commands'); // cypress/support/commands.js const compareSnapshotCommand = require('cypress-image-diff-js/dist/command'); compareSnapshotCommand();","title":"Cypress support"},{"location":"Publishing/","text":"Building and publishing Commits to main automatically build and publish a new version of the package. Publising a new version Create a PR with commits using one of the prefixes mentioned in CONTRIBUTING . Have your PR reviewed and merged.","title":"Building and publishing"},{"location":"Publishing/#building-and-publishing","text":"Commits to main automatically build and publish a new version of the package.","title":"Building and publishing"},{"location":"Publishing/#publising-a-new-version","text":"Create a PR with commits using one of the prefixes mentioned in CONTRIBUTING . Have your PR reviewed and merged.","title":"Publising a new version"},{"location":"Reporting/","text":"Reporting A report can be generated after the suite is executed. Baseline, comparison and diff images will only be added to the report for failing tests. Cypress support index Generate default HTML report Add the following after hook // cypress/support/index.js for Cypress versions below 10 // cypress/support/{scheme}.js for Cypress versions 10 and above, where {scheme} defaults to e2e after(() => { cy.task('generateReport') }) The report will look something like: Generate Custom HTML report If you want to generate your custom report, generate a report json file by passing JSON_REPORT in the custom config file , and build your own HTML file from this json. See example.json Folder structure When a report is generated it will create the following folder: . \u251c\u2500\u2500 cypress-visual-report There will be enhancements coming in to make the folder name/location configurable.","title":"Reporting"},{"location":"Reporting/#reporting","text":"A report can be generated after the suite is executed. Baseline, comparison and diff images will only be added to the report for failing tests.","title":"Reporting"},{"location":"Reporting/#cypress-support-index","text":"","title":"Cypress support index"},{"location":"Reporting/#generate-default-html-report","text":"Add the following after hook // cypress/support/index.js for Cypress versions below 10 // cypress/support/{scheme}.js for Cypress versions 10 and above, where {scheme} defaults to e2e after(() => { cy.task('generateReport') }) The report will look something like:","title":"Generate default HTML report"},{"location":"Reporting/#generate-custom-html-report","text":"If you want to generate your custom report, generate a report json file by passing JSON_REPORT in the custom config file , and build your own HTML file from this json. See example.json","title":"Generate Custom HTML report"},{"location":"Reporting/#folder-structure","text":"When a report is generated it will create the following folder: . \u251c\u2500\u2500 cypress-visual-report There will be enhancements coming in to make the folder name/location configurable.","title":"Folder structure"},{"location":"Running%20tests/","text":"Tests Before you run any of the test command below ensure to build the image: make build Linting make lint-test Unit tests make unit-test E2E tests make e2e-test Please notice It's important that you run the tests in the container as it will have a single resolution setup for everyone. If the tests are executed locally, depending on your screen resolution the results can differ.","title":"Tests"},{"location":"Running%20tests/#tests","text":"Before you run any of the test command below ensure to build the image: make build","title":"Tests"},{"location":"Running%20tests/#linting","text":"make lint-test","title":"Linting"},{"location":"Running%20tests/#unit-tests","text":"make unit-test","title":"Unit tests"},{"location":"Running%20tests/#e2e-tests","text":"make e2e-test","title":"E2E tests"},{"location":"Running%20tests/#please-notice","text":"It's important that you run the tests in the container as it will have a single resolution setup for everyone. If the tests are executed locally, depending on your screen resolution the results can differ.","title":"Please notice"}]}